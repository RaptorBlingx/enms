# ============================================================================
# EnMS - Energy Management System
# PostgreSQL Configuration (Optimized for TimescaleDB)
# ============================================================================
# This configuration is optimized for time-series workloads with TimescaleDB
# Adjust values based on your server's resources
#
# Assumptions:
#   - 8 GB RAM available for PostgreSQL
#   - SSD storage
#   - Mixed read/write workload
# ============================================================================

# ----------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
# ----------------------------------------------------------------------------

max_connections = 100                   # Maximum number of concurrent connections
superuser_reserved_connections = 3      # Reserved for superuser

# ----------------------------------------------------------------------------
# RESOURCE USAGE (Memory)
# ----------------------------------------------------------------------------

# Memory settings (for 8GB RAM server)
shared_buffers = 2GB                    # 25% of RAM
effective_cache_size = 6GB              # 75% of RAM
work_mem = 64MB                         # Per operation memory
maintenance_work_mem = 512MB            # For VACUUM, CREATE INDEX, etc.

# TimescaleDB specific
timescaledb.max_background_workers = 8  # Background workers for compression, etc.

# ----------------------------------------------------------------------------
# WRITE AHEAD LOG (WAL)
# ----------------------------------------------------------------------------

wal_level = replica                     # For replication support
wal_buffers = 16MB                      # WAL buffer size
min_wal_size = 1GB                      # Minimum WAL size to keep
max_wal_size = 4GB                      # Maximum WAL size before checkpoint

# Checkpoints
checkpoint_timeout = 15min              # Time between checkpoints
checkpoint_completion_target = 0.9      # Spread checkpoint writes

# ----------------------------------------------------------------------------
# QUERY TUNING
# ----------------------------------------------------------------------------

# Planner settings
random_page_cost = 1.1                  # Lower for SSD (default 4.0)
effective_io_concurrency = 200          # For SSD
default_statistics_target = 100         # Statistics detail level

# Parallel query settings
max_parallel_workers_per_gather = 2
max_parallel_workers = 8
max_worker_processes = 16               # Must be >= max_parallel_workers + timescaledb workers

# ----------------------------------------------------------------------------
# WRITE PERFORMANCE
# ----------------------------------------------------------------------------

# Asynchronous commit (slight risk, big performance gain)
synchronous_commit = off                # Set to 'on' for critical systems

# Background writer
bgwriter_delay = 200ms                  # Delay between rounds
bgwriter_lru_maxpages = 100            # Max pages per round
bgwriter_lru_multiplier = 2.0          # Multiplier for next round

# ----------------------------------------------------------------------------
# AUTOVACUUM (Important for time-series)
# ----------------------------------------------------------------------------

autovacuum = on                         # Enable autovacuum
autovacuum_max_workers = 3              # Number of autovacuum workers
autovacuum_naptime = 20s                # Time between runs

# Autovacuum thresholds (more aggressive for time-series)
autovacuum_vacuum_threshold = 50
autovacuum_analyze_threshold = 50
autovacuum_vacuum_scale_factor = 0.05   # 5% (default 20%)
autovacuum_analyze_scale_factor = 0.05  # 5% (default 10%)

# Vacuum cost delays (prevent I/O spikes)
autovacuum_vacuum_cost_delay = 2ms
autovacuum_vacuum_cost_limit = 1000

# ----------------------------------------------------------------------------
# LOGGING
# ----------------------------------------------------------------------------

# Where to log
logging_collector = on                  # Enable log collection
log_directory = 'log'                   # Log directory
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_rotation_age = 1d                   # Rotate daily
log_rotation_size = 100MB              # Or when file reaches 100MB

# What to log
log_min_duration_statement = 1000       # Log slow queries (>1 second)
log_checkpoints = on                    # Log checkpoint activity
log_connections = on                    # Log connections
log_disconnections = on                 # Log disconnections
log_lock_waits = on                    # Log lock waits
log_temp_files = 0                     # Log all temp files

# Log format
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
log_timezone = 'UTC'

# Statement logging
log_statement = 'ddl'                   # Log DDL statements
log_duration = off                      # Don't log all durations

# ----------------------------------------------------------------------------
# STATISTICS
# ----------------------------------------------------------------------------

track_activities = on
track_counts = on
track_io_timing = on                    # Track I/O timing (slight overhead)
track_functions = pl                    # Track PL/pgSQL functions

# ----------------------------------------------------------------------------
# CLIENT CONNECTION DEFAULTS
# ----------------------------------------------------------------------------

# Locale and formatting
datestyle = 'iso, mdy'
timezone = 'UTC'                        # All timestamps in UTC
lc_messages = 'en_US.utf8'
lc_monetary = 'en_US.utf8'
lc_numeric = 'en_US.utf8'
lc_time = 'en_US.utf8'

default_text_search_config = 'pg_catalog.english'

# ----------------------------------------------------------------------------
# TIMESCALEDB SPECIFIC SETTINGS
# ----------------------------------------------------------------------------

# Hypertable settings
timescaledb.max_background_workers = 8

# Compression settings
timescaledb.compress_segmentby_schedule_interval = '1h'
timescaledb.compress_orderby_schedule_interval = '1h'

# Continuous aggregates
timescaledb.materialized_only = off     # Allow real-time aggregation

# ----------------------------------------------------------------------------
# EXTENSIONS
# ----------------------------------------------------------------------------

shared_preload_libraries = 'timescaledb,pg_stat_statements'

# pg_stat_statements configuration
pg_stat_statements.track = all
pg_stat_statements.max = 10000

# ----------------------------------------------------------------------------
# NOTES
# ----------------------------------------------------------------------------
# For production deployment:
# 1. Adjust memory settings based on available RAM
# 2. Set synchronous_commit = on for critical systems
# 3. Configure proper backup and PITR
# 4. Monitor slow queries and adjust work_mem if needed
# 5. Review autovacuum settings based on actual workload
# 6. Enable SSL/TLS for secure connections
# 7. Configure connection pooling (PgBouncer recommended)
# ============================================================================
